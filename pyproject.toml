[build-system]
requires = ["setuptools>=65.5.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tosca-laser-control"
version = "0.1.0-alpha"
description = "TOSCA Laser Control System"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Proprietary"}
authors = [
    {name = "Aleyegn"}
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | components/actuator_module/Xeryon\.py
  | components/actuator_module/settings_default\.txt
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
exclude = [
    '^components/actuator_module/Xeryon\.py$',
]

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "pyqtgraph.*",
    "serial.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "components.actuator_module.Xeryon"
ignore_errors = true

[tool.pylint.messages_control]
disable = [
    "C0103",  # Invalid name (we use Qt naming conventions)
    "C0114",  # Missing module docstring
    "R0913",  # Too many arguments
]

[tool.pylint.format]
max-line-length = 100

[tool.pytest.ini_options]
minversion = "7.4"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80"
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests across multiple components",
    "safety: Safety-critical system tests (MUST PASS)",
    "hardware: Tests requiring hardware connections",
    "slow: Tests that take significant time",
    "gui: Tests requiring PyQt6 GUI components"
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]
